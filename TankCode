#include <math.h>
#include "Arduino.h"
#include "Enes100.h"
#include "Tank.h"



void setup() {
    Enes100.begin("Project Kowalski", WATER, 249,50, 51);
    Tank.begin();
    
    Enes100.println("Starting directions towards landing zone");
    rotateOTV();
    
    // Enes100.println("Starting 90 degree turns");
    
    // Enes100.println("Turn 1");
    // turn90Degrees(1);
    
    // Enes100.println("Turn 2");
    // turn90Degrees(1);
    
    // Enes100.println("Turn 3");
    // turn90Degrees(1);
    
    Enes100.println("Start Moving Towards Mission Site");
    navigateMission();
}

void loop() {
    delay(100);
    updateCoords();
    moveTillX(3.5);
    //break;
}

void updateCoords()
{

    Enes100.print("X = "); Enes100.println(Enes100.getX());
    Enes100.print("Y = "); Enes100.println(Enes100.getY());
    Enes100.print("Theta = "); Enes100.println(Enes100.getTheta());

}


void rotateOTV() {
    // Set a maximum speed for the motors
    const int maxSpeed = 150;
    // Threshold for stopping (3 degrees in radians)
    const float threshold = .3; 
    
    // Continue rotating until theta is within the specified range
    while (fabs(Enes100.getTheta()) > threshold) {
        updateCoords ();
        // Get the current theta
        float currentTheta = Enes100.getTheta();
    
        // Calculate the speed based on how close we are to zero
        int speed = maxSpeed;

        // Adjust the speed based on the angle's proximity to zero
        if (fabs(currentTheta) < threshold + .3) {
            //map(int x, int in_min, int in_max, int out_min, int out_max)
            speed = map(fabs(currentTheta), threshold, 0.5, 50, maxSpeed); 
            // Slow down as it approaches threshold
        }

        // Control the motor direction and speed
        if (currentTheta < 0) {
            // clockwise if theta is negative
            setDirection(2, speed);
        } else {
            // counterclockwise if theta is positive
            setDirection (1, speed);
        }
        //Motors need to stop to check thetha
        stopMotors();
    }


}

void moveTillX(float xCord){
    //Moves Tank till x values reach target within threshold of .3
    while(fabs(Enes100.getX() - xCord) < 0.3){
        setDirection(0, 200);
        delay(1000);
        stopMotors();

    }
}
void moveTillY(float yCord){
    //Moves Tank till y values reach target within threshold of .3
    while(fabs(Enes100.getX() - yCord) < 0.3){
        setDirection(0, 200);
        delay(1000);
        stopMotors();

    }
}


void moveOTV(int time, int direction){
    setDirection(direction, 255);
    delay(time);
    stopMotors();
}

void stopMotors(){
    //setLeftMotorPWM
    Tank.setLeftMotorPWM(0);
    Tank.setRightMotorPWM(0);
    //setRightMotorPWM
}

void turn90Degrees(int direction){
    //should pass in 1 (left) or 2 (right)
    float target;
    float currentTheta = Enes100.getTheta();
    
    if(direction == 1){
        //determines 90 degree target theta left turn
        target = Enes100.getTheta() + (PI/2);
    }else if (direction == 2){
        //detemines 90 degree target thetha right turn
        target = Enes100.getTheta() - (PI/2);
    }
    
    //Enes100.println( target);
    
    while ((fabs(Enes100.getTheta()) - fabs(target)) > .2) {
        updateCoords ();
        currentTheta = Enes100.getTheta();
    
        // Calculate the speed based on how close we are to zero
        int maxSpeed = 100;
        int speed = maxSpeed;

        // Adjust the speed based on the angle's proximity to zero
        if ((fabs(Enes100.getTheta()) - fabs(target)) <  (0.2+.3)) {
            //map(int x, int in_min, int in_max, int out_min, int out_max)
            
            speed = map(fabs(currentTheta - target), 0, .2, 20, maxSpeed); 
            // Slow down as it approaches threshold
        }

        // Control the motor direction and speed
        if (currentTheta < target) {
            // clockwise if theta is negative
            setDirection(2, speed);
        } else {
            // counterclockwise if theta is positive
            setDirection (1, speed);
        }
        stopMotors();
        
    }


 
}

void navigateMission(){
    float currentY = Enes100.getY();
    
    if(currentY < 1){ //upper starting position
        rotateOTV(); 
        turn90Degrees(2);
        moveTillY (.55);
    }else{ //lower starting position
        rotateOTV();
        turn90Degrees(1);
        moveTillY(1.45);
    }
}



void setDirection(int motors, int power) {
    if (motors == 0){
        Tank.setLeftMotorPWM(power);
        Tank.setRightMotorPWM(power);
    }else if (motors == 1){//turn left
        Tank.setLeftMotorPWM(power);
        Tank.setRightMotorPWM(-power);
    }else if (motors == 2){//turn right
        Tank.setLeftMotorPWM(-power);
        Tank.setRightMotorPWM(power);
    }

}
